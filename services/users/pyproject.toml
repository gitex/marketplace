[project]
name = "users"
version = "0.1.0"
description = ""
authors = [
    {name = "Your Name",email = "you@example.com"}
]
readme = "README.md"
requires-python = ">=3.12,<4.0"
dependencies = [
    "uvicorn (>=0.36.0,<0.37.0)",
    "sqlmodel (>=0.0.25,<0.0.26)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "pydantic-settings (>=2.10.1,<3.0.0)",
    "redis (>=6.4.0,<7.0.0)",
    "aiokafka (>=0.12.0,<0.13.0)",
    "tenacity (>=9.1.2,<10.0.0)",
    "httpx (>=0.28.1,<0.29.0)",
    "alembic (>=1.16.5,<2.0.0)",
    "prometheus-client (>=0.23.1,<0.24.0)",
    "opentelemetry-instrumentation-fastapi (>=0.58b0,<0.59)",
    "opentelemetry-instrumentation-httpx (>=0.58b0,<0.59)",
    "core (>= 0.4.0,<1.0.0)",
    "fastapi[standard]>=0.117.1",
]

[dependency-groups]
dev = [
    "aiohttp>=3.12.15",
    "mypy>=1.18.2",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-mock>=3.15.1",
]

[tool.uv.sources]
fastapi = { index = "internal" }
pytest = { index = "internal" }
mypy = { index = "internal" }
pytest-mock = { index = "internal" }
pytest-asyncio = { index = "internal" }
aiohttp = { index = "internal" }

[[tool.uv.index]]
name = "internal"
url = "http://localhost:8010/simple/"
default = true

[tool.pytest.ini_options]
# Run pytest with all our checkers, and don't spam us with massive tracebacks on error
addopts = """
    --tb=native -vv --doctest-modules --doctest-glob="*.rst"
    """
# Doctest python code in docs, python code in src docstrings, test functions in tests
testpaths = "tests"

[tool.isort]
profile = "black"
multi_line_output = 3 
# src_paths = ["src", "tests"]

[tool.black]
line-length = 120 

[tool.mypy]
plugins = ["pydantic.mypy"]
follow_imports = "silent"
warn_unreachable = true 
pretty = true 
show_column_numbers = true 
show_error_codes = true 
show_error_context = true 
ignore_missing_imports = true 
warn_redundant_casts = true 
warn_unused_ignores = true 
check_untyped_defs = true 

[tool.pydantic-mypy]
init_forbid_extra = true 
init_typed = true 
warn_untyped_fields = true 

[tool.ruff]
src = ["src", "tests"]
line-length = 88
lint.select = [
    "B",  # flake8-bugbear - https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "C4", # flake8-comprehensions - https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "E",  # pycodestyle errors - https://docs.astral.sh/ruff/rules/#error-e
    "F",  # pyflakes rules - https://docs.astral.sh/ruff/rules/#pyflakes-f
    "W",  # pycodestyle warnings - https://docs.astral.sh/ruff/rules/#warning-w
    "I",  # isort - https://docs.astral.sh/ruff/rules/#isort-i
    "UP", # pyupgrade - https://docs.astral.sh/ruff/rules/#pyupgrade-up
]
